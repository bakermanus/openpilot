#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5615539772670674435) {
   out_5615539772670674435[0] = 0;
   out_5615539772670674435[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5615539772670674435[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5615539772670674435[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5615539772670674435[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5615539772670674435[5] = -sin(in_vec[1]);
   out_5615539772670674435[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5615539772670674435[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5615539772670674435[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5615539772670674435[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5615539772670674435[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5615539772670674435[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5615539772670674435[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5615539772670674435[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5615539772670674435[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5615539772670674435[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5615539772670674435[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5615539772670674435[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3184297168680991965) {
   out_3184297168680991965[0] = delta_x[0] + nom_x[0];
   out_3184297168680991965[1] = delta_x[1] + nom_x[1];
   out_3184297168680991965[2] = delta_x[2] + nom_x[2];
   out_3184297168680991965[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3184297168680991965[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3184297168680991965[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3184297168680991965[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3184297168680991965[7] = delta_x[6] + nom_x[7];
   out_3184297168680991965[8] = delta_x[7] + nom_x[8];
   out_3184297168680991965[9] = delta_x[8] + nom_x[9];
   out_3184297168680991965[10] = delta_x[9] + nom_x[10];
   out_3184297168680991965[11] = delta_x[10] + nom_x[11];
   out_3184297168680991965[12] = delta_x[11] + nom_x[12];
   out_3184297168680991965[13] = delta_x[12] + nom_x[13];
   out_3184297168680991965[14] = delta_x[13] + nom_x[14];
   out_3184297168680991965[15] = delta_x[14] + nom_x[15];
   out_3184297168680991965[16] = delta_x[15] + nom_x[16];
   out_3184297168680991965[17] = delta_x[16] + nom_x[17];
   out_3184297168680991965[18] = delta_x[17] + nom_x[18];
   out_3184297168680991965[19] = delta_x[18] + nom_x[19];
   out_3184297168680991965[20] = delta_x[19] + nom_x[20];
   out_3184297168680991965[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1346894790680346190) {
   out_1346894790680346190[0] = -nom_x[0] + true_x[0];
   out_1346894790680346190[1] = -nom_x[1] + true_x[1];
   out_1346894790680346190[2] = -nom_x[2] + true_x[2];
   out_1346894790680346190[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1346894790680346190[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1346894790680346190[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1346894790680346190[6] = -nom_x[7] + true_x[7];
   out_1346894790680346190[7] = -nom_x[8] + true_x[8];
   out_1346894790680346190[8] = -nom_x[9] + true_x[9];
   out_1346894790680346190[9] = -nom_x[10] + true_x[10];
   out_1346894790680346190[10] = -nom_x[11] + true_x[11];
   out_1346894790680346190[11] = -nom_x[12] + true_x[12];
   out_1346894790680346190[12] = -nom_x[13] + true_x[13];
   out_1346894790680346190[13] = -nom_x[14] + true_x[14];
   out_1346894790680346190[14] = -nom_x[15] + true_x[15];
   out_1346894790680346190[15] = -nom_x[16] + true_x[16];
   out_1346894790680346190[16] = -nom_x[17] + true_x[17];
   out_1346894790680346190[17] = -nom_x[18] + true_x[18];
   out_1346894790680346190[18] = -nom_x[19] + true_x[19];
   out_1346894790680346190[19] = -nom_x[20] + true_x[20];
   out_1346894790680346190[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3305990753123808482) {
   out_3305990753123808482[0] = 1.0;
   out_3305990753123808482[1] = 0;
   out_3305990753123808482[2] = 0;
   out_3305990753123808482[3] = 0;
   out_3305990753123808482[4] = 0;
   out_3305990753123808482[5] = 0;
   out_3305990753123808482[6] = 0;
   out_3305990753123808482[7] = 0;
   out_3305990753123808482[8] = 0;
   out_3305990753123808482[9] = 0;
   out_3305990753123808482[10] = 0;
   out_3305990753123808482[11] = 0;
   out_3305990753123808482[12] = 0;
   out_3305990753123808482[13] = 0;
   out_3305990753123808482[14] = 0;
   out_3305990753123808482[15] = 0;
   out_3305990753123808482[16] = 0;
   out_3305990753123808482[17] = 0;
   out_3305990753123808482[18] = 0;
   out_3305990753123808482[19] = 0;
   out_3305990753123808482[20] = 0;
   out_3305990753123808482[21] = 0;
   out_3305990753123808482[22] = 1.0;
   out_3305990753123808482[23] = 0;
   out_3305990753123808482[24] = 0;
   out_3305990753123808482[25] = 0;
   out_3305990753123808482[26] = 0;
   out_3305990753123808482[27] = 0;
   out_3305990753123808482[28] = 0;
   out_3305990753123808482[29] = 0;
   out_3305990753123808482[30] = 0;
   out_3305990753123808482[31] = 0;
   out_3305990753123808482[32] = 0;
   out_3305990753123808482[33] = 0;
   out_3305990753123808482[34] = 0;
   out_3305990753123808482[35] = 0;
   out_3305990753123808482[36] = 0;
   out_3305990753123808482[37] = 0;
   out_3305990753123808482[38] = 0;
   out_3305990753123808482[39] = 0;
   out_3305990753123808482[40] = 0;
   out_3305990753123808482[41] = 0;
   out_3305990753123808482[42] = 0;
   out_3305990753123808482[43] = 0;
   out_3305990753123808482[44] = 1.0;
   out_3305990753123808482[45] = 0;
   out_3305990753123808482[46] = 0;
   out_3305990753123808482[47] = 0;
   out_3305990753123808482[48] = 0;
   out_3305990753123808482[49] = 0;
   out_3305990753123808482[50] = 0;
   out_3305990753123808482[51] = 0;
   out_3305990753123808482[52] = 0;
   out_3305990753123808482[53] = 0;
   out_3305990753123808482[54] = 0;
   out_3305990753123808482[55] = 0;
   out_3305990753123808482[56] = 0;
   out_3305990753123808482[57] = 0;
   out_3305990753123808482[58] = 0;
   out_3305990753123808482[59] = 0;
   out_3305990753123808482[60] = 0;
   out_3305990753123808482[61] = 0;
   out_3305990753123808482[62] = 0;
   out_3305990753123808482[63] = 0;
   out_3305990753123808482[64] = 0;
   out_3305990753123808482[65] = 0;
   out_3305990753123808482[66] = -0.5*state[4];
   out_3305990753123808482[67] = -0.5*state[5];
   out_3305990753123808482[68] = -0.5*state[6];
   out_3305990753123808482[69] = 0;
   out_3305990753123808482[70] = 0;
   out_3305990753123808482[71] = 0;
   out_3305990753123808482[72] = 0;
   out_3305990753123808482[73] = 0;
   out_3305990753123808482[74] = 0;
   out_3305990753123808482[75] = 0;
   out_3305990753123808482[76] = 0;
   out_3305990753123808482[77] = 0;
   out_3305990753123808482[78] = 0;
   out_3305990753123808482[79] = 0;
   out_3305990753123808482[80] = 0;
   out_3305990753123808482[81] = 0;
   out_3305990753123808482[82] = 0;
   out_3305990753123808482[83] = 0;
   out_3305990753123808482[84] = 0;
   out_3305990753123808482[85] = 0;
   out_3305990753123808482[86] = 0;
   out_3305990753123808482[87] = 0.5*state[3];
   out_3305990753123808482[88] = 0.5*state[6];
   out_3305990753123808482[89] = -0.5*state[5];
   out_3305990753123808482[90] = 0;
   out_3305990753123808482[91] = 0;
   out_3305990753123808482[92] = 0;
   out_3305990753123808482[93] = 0;
   out_3305990753123808482[94] = 0;
   out_3305990753123808482[95] = 0;
   out_3305990753123808482[96] = 0;
   out_3305990753123808482[97] = 0;
   out_3305990753123808482[98] = 0;
   out_3305990753123808482[99] = 0;
   out_3305990753123808482[100] = 0;
   out_3305990753123808482[101] = 0;
   out_3305990753123808482[102] = 0;
   out_3305990753123808482[103] = 0;
   out_3305990753123808482[104] = 0;
   out_3305990753123808482[105] = 0;
   out_3305990753123808482[106] = 0;
   out_3305990753123808482[107] = 0;
   out_3305990753123808482[108] = -0.5*state[6];
   out_3305990753123808482[109] = 0.5*state[3];
   out_3305990753123808482[110] = 0.5*state[4];
   out_3305990753123808482[111] = 0;
   out_3305990753123808482[112] = 0;
   out_3305990753123808482[113] = 0;
   out_3305990753123808482[114] = 0;
   out_3305990753123808482[115] = 0;
   out_3305990753123808482[116] = 0;
   out_3305990753123808482[117] = 0;
   out_3305990753123808482[118] = 0;
   out_3305990753123808482[119] = 0;
   out_3305990753123808482[120] = 0;
   out_3305990753123808482[121] = 0;
   out_3305990753123808482[122] = 0;
   out_3305990753123808482[123] = 0;
   out_3305990753123808482[124] = 0;
   out_3305990753123808482[125] = 0;
   out_3305990753123808482[126] = 0;
   out_3305990753123808482[127] = 0;
   out_3305990753123808482[128] = 0;
   out_3305990753123808482[129] = 0.5*state[5];
   out_3305990753123808482[130] = -0.5*state[4];
   out_3305990753123808482[131] = 0.5*state[3];
   out_3305990753123808482[132] = 0;
   out_3305990753123808482[133] = 0;
   out_3305990753123808482[134] = 0;
   out_3305990753123808482[135] = 0;
   out_3305990753123808482[136] = 0;
   out_3305990753123808482[137] = 0;
   out_3305990753123808482[138] = 0;
   out_3305990753123808482[139] = 0;
   out_3305990753123808482[140] = 0;
   out_3305990753123808482[141] = 0;
   out_3305990753123808482[142] = 0;
   out_3305990753123808482[143] = 0;
   out_3305990753123808482[144] = 0;
   out_3305990753123808482[145] = 0;
   out_3305990753123808482[146] = 0;
   out_3305990753123808482[147] = 0;
   out_3305990753123808482[148] = 0;
   out_3305990753123808482[149] = 0;
   out_3305990753123808482[150] = 0;
   out_3305990753123808482[151] = 0;
   out_3305990753123808482[152] = 0;
   out_3305990753123808482[153] = 1.0;
   out_3305990753123808482[154] = 0;
   out_3305990753123808482[155] = 0;
   out_3305990753123808482[156] = 0;
   out_3305990753123808482[157] = 0;
   out_3305990753123808482[158] = 0;
   out_3305990753123808482[159] = 0;
   out_3305990753123808482[160] = 0;
   out_3305990753123808482[161] = 0;
   out_3305990753123808482[162] = 0;
   out_3305990753123808482[163] = 0;
   out_3305990753123808482[164] = 0;
   out_3305990753123808482[165] = 0;
   out_3305990753123808482[166] = 0;
   out_3305990753123808482[167] = 0;
   out_3305990753123808482[168] = 0;
   out_3305990753123808482[169] = 0;
   out_3305990753123808482[170] = 0;
   out_3305990753123808482[171] = 0;
   out_3305990753123808482[172] = 0;
   out_3305990753123808482[173] = 0;
   out_3305990753123808482[174] = 0;
   out_3305990753123808482[175] = 1.0;
   out_3305990753123808482[176] = 0;
   out_3305990753123808482[177] = 0;
   out_3305990753123808482[178] = 0;
   out_3305990753123808482[179] = 0;
   out_3305990753123808482[180] = 0;
   out_3305990753123808482[181] = 0;
   out_3305990753123808482[182] = 0;
   out_3305990753123808482[183] = 0;
   out_3305990753123808482[184] = 0;
   out_3305990753123808482[185] = 0;
   out_3305990753123808482[186] = 0;
   out_3305990753123808482[187] = 0;
   out_3305990753123808482[188] = 0;
   out_3305990753123808482[189] = 0;
   out_3305990753123808482[190] = 0;
   out_3305990753123808482[191] = 0;
   out_3305990753123808482[192] = 0;
   out_3305990753123808482[193] = 0;
   out_3305990753123808482[194] = 0;
   out_3305990753123808482[195] = 0;
   out_3305990753123808482[196] = 0;
   out_3305990753123808482[197] = 1.0;
   out_3305990753123808482[198] = 0;
   out_3305990753123808482[199] = 0;
   out_3305990753123808482[200] = 0;
   out_3305990753123808482[201] = 0;
   out_3305990753123808482[202] = 0;
   out_3305990753123808482[203] = 0;
   out_3305990753123808482[204] = 0;
   out_3305990753123808482[205] = 0;
   out_3305990753123808482[206] = 0;
   out_3305990753123808482[207] = 0;
   out_3305990753123808482[208] = 0;
   out_3305990753123808482[209] = 0;
   out_3305990753123808482[210] = 0;
   out_3305990753123808482[211] = 0;
   out_3305990753123808482[212] = 0;
   out_3305990753123808482[213] = 0;
   out_3305990753123808482[214] = 0;
   out_3305990753123808482[215] = 0;
   out_3305990753123808482[216] = 0;
   out_3305990753123808482[217] = 0;
   out_3305990753123808482[218] = 0;
   out_3305990753123808482[219] = 1.0;
   out_3305990753123808482[220] = 0;
   out_3305990753123808482[221] = 0;
   out_3305990753123808482[222] = 0;
   out_3305990753123808482[223] = 0;
   out_3305990753123808482[224] = 0;
   out_3305990753123808482[225] = 0;
   out_3305990753123808482[226] = 0;
   out_3305990753123808482[227] = 0;
   out_3305990753123808482[228] = 0;
   out_3305990753123808482[229] = 0;
   out_3305990753123808482[230] = 0;
   out_3305990753123808482[231] = 0;
   out_3305990753123808482[232] = 0;
   out_3305990753123808482[233] = 0;
   out_3305990753123808482[234] = 0;
   out_3305990753123808482[235] = 0;
   out_3305990753123808482[236] = 0;
   out_3305990753123808482[237] = 0;
   out_3305990753123808482[238] = 0;
   out_3305990753123808482[239] = 0;
   out_3305990753123808482[240] = 0;
   out_3305990753123808482[241] = 1.0;
   out_3305990753123808482[242] = 0;
   out_3305990753123808482[243] = 0;
   out_3305990753123808482[244] = 0;
   out_3305990753123808482[245] = 0;
   out_3305990753123808482[246] = 0;
   out_3305990753123808482[247] = 0;
   out_3305990753123808482[248] = 0;
   out_3305990753123808482[249] = 0;
   out_3305990753123808482[250] = 0;
   out_3305990753123808482[251] = 0;
   out_3305990753123808482[252] = 0;
   out_3305990753123808482[253] = 0;
   out_3305990753123808482[254] = 0;
   out_3305990753123808482[255] = 0;
   out_3305990753123808482[256] = 0;
   out_3305990753123808482[257] = 0;
   out_3305990753123808482[258] = 0;
   out_3305990753123808482[259] = 0;
   out_3305990753123808482[260] = 0;
   out_3305990753123808482[261] = 0;
   out_3305990753123808482[262] = 0;
   out_3305990753123808482[263] = 1.0;
   out_3305990753123808482[264] = 0;
   out_3305990753123808482[265] = 0;
   out_3305990753123808482[266] = 0;
   out_3305990753123808482[267] = 0;
   out_3305990753123808482[268] = 0;
   out_3305990753123808482[269] = 0;
   out_3305990753123808482[270] = 0;
   out_3305990753123808482[271] = 0;
   out_3305990753123808482[272] = 0;
   out_3305990753123808482[273] = 0;
   out_3305990753123808482[274] = 0;
   out_3305990753123808482[275] = 0;
   out_3305990753123808482[276] = 0;
   out_3305990753123808482[277] = 0;
   out_3305990753123808482[278] = 0;
   out_3305990753123808482[279] = 0;
   out_3305990753123808482[280] = 0;
   out_3305990753123808482[281] = 0;
   out_3305990753123808482[282] = 0;
   out_3305990753123808482[283] = 0;
   out_3305990753123808482[284] = 0;
   out_3305990753123808482[285] = 1.0;
   out_3305990753123808482[286] = 0;
   out_3305990753123808482[287] = 0;
   out_3305990753123808482[288] = 0;
   out_3305990753123808482[289] = 0;
   out_3305990753123808482[290] = 0;
   out_3305990753123808482[291] = 0;
   out_3305990753123808482[292] = 0;
   out_3305990753123808482[293] = 0;
   out_3305990753123808482[294] = 0;
   out_3305990753123808482[295] = 0;
   out_3305990753123808482[296] = 0;
   out_3305990753123808482[297] = 0;
   out_3305990753123808482[298] = 0;
   out_3305990753123808482[299] = 0;
   out_3305990753123808482[300] = 0;
   out_3305990753123808482[301] = 0;
   out_3305990753123808482[302] = 0;
   out_3305990753123808482[303] = 0;
   out_3305990753123808482[304] = 0;
   out_3305990753123808482[305] = 0;
   out_3305990753123808482[306] = 0;
   out_3305990753123808482[307] = 1.0;
   out_3305990753123808482[308] = 0;
   out_3305990753123808482[309] = 0;
   out_3305990753123808482[310] = 0;
   out_3305990753123808482[311] = 0;
   out_3305990753123808482[312] = 0;
   out_3305990753123808482[313] = 0;
   out_3305990753123808482[314] = 0;
   out_3305990753123808482[315] = 0;
   out_3305990753123808482[316] = 0;
   out_3305990753123808482[317] = 0;
   out_3305990753123808482[318] = 0;
   out_3305990753123808482[319] = 0;
   out_3305990753123808482[320] = 0;
   out_3305990753123808482[321] = 0;
   out_3305990753123808482[322] = 0;
   out_3305990753123808482[323] = 0;
   out_3305990753123808482[324] = 0;
   out_3305990753123808482[325] = 0;
   out_3305990753123808482[326] = 0;
   out_3305990753123808482[327] = 0;
   out_3305990753123808482[328] = 0;
   out_3305990753123808482[329] = 1.0;
   out_3305990753123808482[330] = 0;
   out_3305990753123808482[331] = 0;
   out_3305990753123808482[332] = 0;
   out_3305990753123808482[333] = 0;
   out_3305990753123808482[334] = 0;
   out_3305990753123808482[335] = 0;
   out_3305990753123808482[336] = 0;
   out_3305990753123808482[337] = 0;
   out_3305990753123808482[338] = 0;
   out_3305990753123808482[339] = 0;
   out_3305990753123808482[340] = 0;
   out_3305990753123808482[341] = 0;
   out_3305990753123808482[342] = 0;
   out_3305990753123808482[343] = 0;
   out_3305990753123808482[344] = 0;
   out_3305990753123808482[345] = 0;
   out_3305990753123808482[346] = 0;
   out_3305990753123808482[347] = 0;
   out_3305990753123808482[348] = 0;
   out_3305990753123808482[349] = 0;
   out_3305990753123808482[350] = 0;
   out_3305990753123808482[351] = 1.0;
   out_3305990753123808482[352] = 0;
   out_3305990753123808482[353] = 0;
   out_3305990753123808482[354] = 0;
   out_3305990753123808482[355] = 0;
   out_3305990753123808482[356] = 0;
   out_3305990753123808482[357] = 0;
   out_3305990753123808482[358] = 0;
   out_3305990753123808482[359] = 0;
   out_3305990753123808482[360] = 0;
   out_3305990753123808482[361] = 0;
   out_3305990753123808482[362] = 0;
   out_3305990753123808482[363] = 0;
   out_3305990753123808482[364] = 0;
   out_3305990753123808482[365] = 0;
   out_3305990753123808482[366] = 0;
   out_3305990753123808482[367] = 0;
   out_3305990753123808482[368] = 0;
   out_3305990753123808482[369] = 0;
   out_3305990753123808482[370] = 0;
   out_3305990753123808482[371] = 0;
   out_3305990753123808482[372] = 0;
   out_3305990753123808482[373] = 1.0;
   out_3305990753123808482[374] = 0;
   out_3305990753123808482[375] = 0;
   out_3305990753123808482[376] = 0;
   out_3305990753123808482[377] = 0;
   out_3305990753123808482[378] = 0;
   out_3305990753123808482[379] = 0;
   out_3305990753123808482[380] = 0;
   out_3305990753123808482[381] = 0;
   out_3305990753123808482[382] = 0;
   out_3305990753123808482[383] = 0;
   out_3305990753123808482[384] = 0;
   out_3305990753123808482[385] = 0;
   out_3305990753123808482[386] = 0;
   out_3305990753123808482[387] = 0;
   out_3305990753123808482[388] = 0;
   out_3305990753123808482[389] = 0;
   out_3305990753123808482[390] = 0;
   out_3305990753123808482[391] = 0;
   out_3305990753123808482[392] = 0;
   out_3305990753123808482[393] = 0;
   out_3305990753123808482[394] = 0;
   out_3305990753123808482[395] = 1.0;
   out_3305990753123808482[396] = 0;
   out_3305990753123808482[397] = 0;
   out_3305990753123808482[398] = 0;
   out_3305990753123808482[399] = 0;
   out_3305990753123808482[400] = 0;
   out_3305990753123808482[401] = 0;
   out_3305990753123808482[402] = 0;
   out_3305990753123808482[403] = 0;
   out_3305990753123808482[404] = 0;
   out_3305990753123808482[405] = 0;
   out_3305990753123808482[406] = 0;
   out_3305990753123808482[407] = 0;
   out_3305990753123808482[408] = 0;
   out_3305990753123808482[409] = 0;
   out_3305990753123808482[410] = 0;
   out_3305990753123808482[411] = 0;
   out_3305990753123808482[412] = 0;
   out_3305990753123808482[413] = 0;
   out_3305990753123808482[414] = 0;
   out_3305990753123808482[415] = 0;
   out_3305990753123808482[416] = 0;
   out_3305990753123808482[417] = 1.0;
   out_3305990753123808482[418] = 0;
   out_3305990753123808482[419] = 0;
   out_3305990753123808482[420] = 0;
   out_3305990753123808482[421] = 0;
   out_3305990753123808482[422] = 0;
   out_3305990753123808482[423] = 0;
   out_3305990753123808482[424] = 0;
   out_3305990753123808482[425] = 0;
   out_3305990753123808482[426] = 0;
   out_3305990753123808482[427] = 0;
   out_3305990753123808482[428] = 0;
   out_3305990753123808482[429] = 0;
   out_3305990753123808482[430] = 0;
   out_3305990753123808482[431] = 0;
   out_3305990753123808482[432] = 0;
   out_3305990753123808482[433] = 0;
   out_3305990753123808482[434] = 0;
   out_3305990753123808482[435] = 0;
   out_3305990753123808482[436] = 0;
   out_3305990753123808482[437] = 0;
   out_3305990753123808482[438] = 0;
   out_3305990753123808482[439] = 1.0;
   out_3305990753123808482[440] = 0;
   out_3305990753123808482[441] = 0;
   out_3305990753123808482[442] = 0;
   out_3305990753123808482[443] = 0;
   out_3305990753123808482[444] = 0;
   out_3305990753123808482[445] = 0;
   out_3305990753123808482[446] = 0;
   out_3305990753123808482[447] = 0;
   out_3305990753123808482[448] = 0;
   out_3305990753123808482[449] = 0;
   out_3305990753123808482[450] = 0;
   out_3305990753123808482[451] = 0;
   out_3305990753123808482[452] = 0;
   out_3305990753123808482[453] = 0;
   out_3305990753123808482[454] = 0;
   out_3305990753123808482[455] = 0;
   out_3305990753123808482[456] = 0;
   out_3305990753123808482[457] = 0;
   out_3305990753123808482[458] = 0;
   out_3305990753123808482[459] = 0;
   out_3305990753123808482[460] = 0;
   out_3305990753123808482[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5565335988102264817) {
   out_5565335988102264817[0] = dt*state[7] + state[0];
   out_5565335988102264817[1] = dt*state[8] + state[1];
   out_5565335988102264817[2] = dt*state[9] + state[2];
   out_5565335988102264817[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5565335988102264817[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5565335988102264817[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5565335988102264817[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5565335988102264817[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5565335988102264817[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5565335988102264817[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5565335988102264817[10] = state[10];
   out_5565335988102264817[11] = state[11];
   out_5565335988102264817[12] = state[12];
   out_5565335988102264817[13] = state[13];
   out_5565335988102264817[14] = state[14];
   out_5565335988102264817[15] = state[15];
   out_5565335988102264817[16] = state[16];
   out_5565335988102264817[17] = state[17];
   out_5565335988102264817[18] = state[18];
   out_5565335988102264817[19] = state[19];
   out_5565335988102264817[20] = state[20];
   out_5565335988102264817[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6137194908109777179) {
   out_6137194908109777179[0] = 1;
   out_6137194908109777179[1] = 0;
   out_6137194908109777179[2] = 0;
   out_6137194908109777179[3] = 0;
   out_6137194908109777179[4] = 0;
   out_6137194908109777179[5] = 0;
   out_6137194908109777179[6] = dt;
   out_6137194908109777179[7] = 0;
   out_6137194908109777179[8] = 0;
   out_6137194908109777179[9] = 0;
   out_6137194908109777179[10] = 0;
   out_6137194908109777179[11] = 0;
   out_6137194908109777179[12] = 0;
   out_6137194908109777179[13] = 0;
   out_6137194908109777179[14] = 0;
   out_6137194908109777179[15] = 0;
   out_6137194908109777179[16] = 0;
   out_6137194908109777179[17] = 0;
   out_6137194908109777179[18] = 0;
   out_6137194908109777179[19] = 0;
   out_6137194908109777179[20] = 0;
   out_6137194908109777179[21] = 0;
   out_6137194908109777179[22] = 1;
   out_6137194908109777179[23] = 0;
   out_6137194908109777179[24] = 0;
   out_6137194908109777179[25] = 0;
   out_6137194908109777179[26] = 0;
   out_6137194908109777179[27] = 0;
   out_6137194908109777179[28] = dt;
   out_6137194908109777179[29] = 0;
   out_6137194908109777179[30] = 0;
   out_6137194908109777179[31] = 0;
   out_6137194908109777179[32] = 0;
   out_6137194908109777179[33] = 0;
   out_6137194908109777179[34] = 0;
   out_6137194908109777179[35] = 0;
   out_6137194908109777179[36] = 0;
   out_6137194908109777179[37] = 0;
   out_6137194908109777179[38] = 0;
   out_6137194908109777179[39] = 0;
   out_6137194908109777179[40] = 0;
   out_6137194908109777179[41] = 0;
   out_6137194908109777179[42] = 0;
   out_6137194908109777179[43] = 0;
   out_6137194908109777179[44] = 1;
   out_6137194908109777179[45] = 0;
   out_6137194908109777179[46] = 0;
   out_6137194908109777179[47] = 0;
   out_6137194908109777179[48] = 0;
   out_6137194908109777179[49] = 0;
   out_6137194908109777179[50] = dt;
   out_6137194908109777179[51] = 0;
   out_6137194908109777179[52] = 0;
   out_6137194908109777179[53] = 0;
   out_6137194908109777179[54] = 0;
   out_6137194908109777179[55] = 0;
   out_6137194908109777179[56] = 0;
   out_6137194908109777179[57] = 0;
   out_6137194908109777179[58] = 0;
   out_6137194908109777179[59] = 0;
   out_6137194908109777179[60] = 0;
   out_6137194908109777179[61] = 0;
   out_6137194908109777179[62] = 0;
   out_6137194908109777179[63] = 0;
   out_6137194908109777179[64] = 0;
   out_6137194908109777179[65] = 0;
   out_6137194908109777179[66] = 1;
   out_6137194908109777179[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6137194908109777179[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6137194908109777179[69] = 0;
   out_6137194908109777179[70] = 0;
   out_6137194908109777179[71] = 0;
   out_6137194908109777179[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6137194908109777179[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6137194908109777179[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6137194908109777179[75] = 0;
   out_6137194908109777179[76] = 0;
   out_6137194908109777179[77] = 0;
   out_6137194908109777179[78] = 0;
   out_6137194908109777179[79] = 0;
   out_6137194908109777179[80] = 0;
   out_6137194908109777179[81] = 0;
   out_6137194908109777179[82] = 0;
   out_6137194908109777179[83] = 0;
   out_6137194908109777179[84] = 0;
   out_6137194908109777179[85] = 0;
   out_6137194908109777179[86] = 0;
   out_6137194908109777179[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6137194908109777179[88] = 1;
   out_6137194908109777179[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6137194908109777179[90] = 0;
   out_6137194908109777179[91] = 0;
   out_6137194908109777179[92] = 0;
   out_6137194908109777179[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6137194908109777179[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6137194908109777179[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6137194908109777179[96] = 0;
   out_6137194908109777179[97] = 0;
   out_6137194908109777179[98] = 0;
   out_6137194908109777179[99] = 0;
   out_6137194908109777179[100] = 0;
   out_6137194908109777179[101] = 0;
   out_6137194908109777179[102] = 0;
   out_6137194908109777179[103] = 0;
   out_6137194908109777179[104] = 0;
   out_6137194908109777179[105] = 0;
   out_6137194908109777179[106] = 0;
   out_6137194908109777179[107] = 0;
   out_6137194908109777179[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6137194908109777179[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6137194908109777179[110] = 1;
   out_6137194908109777179[111] = 0;
   out_6137194908109777179[112] = 0;
   out_6137194908109777179[113] = 0;
   out_6137194908109777179[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6137194908109777179[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6137194908109777179[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6137194908109777179[117] = 0;
   out_6137194908109777179[118] = 0;
   out_6137194908109777179[119] = 0;
   out_6137194908109777179[120] = 0;
   out_6137194908109777179[121] = 0;
   out_6137194908109777179[122] = 0;
   out_6137194908109777179[123] = 0;
   out_6137194908109777179[124] = 0;
   out_6137194908109777179[125] = 0;
   out_6137194908109777179[126] = 0;
   out_6137194908109777179[127] = 0;
   out_6137194908109777179[128] = 0;
   out_6137194908109777179[129] = 0;
   out_6137194908109777179[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6137194908109777179[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6137194908109777179[132] = 1;
   out_6137194908109777179[133] = 0;
   out_6137194908109777179[134] = 0;
   out_6137194908109777179[135] = 0;
   out_6137194908109777179[136] = 0;
   out_6137194908109777179[137] = 0;
   out_6137194908109777179[138] = 0;
   out_6137194908109777179[139] = 0;
   out_6137194908109777179[140] = 0;
   out_6137194908109777179[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6137194908109777179[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6137194908109777179[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6137194908109777179[144] = 0;
   out_6137194908109777179[145] = 0;
   out_6137194908109777179[146] = 0;
   out_6137194908109777179[147] = 0;
   out_6137194908109777179[148] = 0;
   out_6137194908109777179[149] = 0;
   out_6137194908109777179[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6137194908109777179[151] = 0;
   out_6137194908109777179[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6137194908109777179[153] = 0;
   out_6137194908109777179[154] = 1;
   out_6137194908109777179[155] = 0;
   out_6137194908109777179[156] = 0;
   out_6137194908109777179[157] = 0;
   out_6137194908109777179[158] = 0;
   out_6137194908109777179[159] = 0;
   out_6137194908109777179[160] = 0;
   out_6137194908109777179[161] = 0;
   out_6137194908109777179[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6137194908109777179[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6137194908109777179[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6137194908109777179[165] = 0;
   out_6137194908109777179[166] = 0;
   out_6137194908109777179[167] = 0;
   out_6137194908109777179[168] = 0;
   out_6137194908109777179[169] = 0;
   out_6137194908109777179[170] = 0;
   out_6137194908109777179[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6137194908109777179[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6137194908109777179[173] = 0;
   out_6137194908109777179[174] = 0;
   out_6137194908109777179[175] = 0;
   out_6137194908109777179[176] = 1;
   out_6137194908109777179[177] = 0;
   out_6137194908109777179[178] = 0;
   out_6137194908109777179[179] = 0;
   out_6137194908109777179[180] = 0;
   out_6137194908109777179[181] = 0;
   out_6137194908109777179[182] = 0;
   out_6137194908109777179[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6137194908109777179[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6137194908109777179[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6137194908109777179[186] = 0;
   out_6137194908109777179[187] = 0;
   out_6137194908109777179[188] = 0;
   out_6137194908109777179[189] = 0;
   out_6137194908109777179[190] = 0;
   out_6137194908109777179[191] = 0;
   out_6137194908109777179[192] = 0;
   out_6137194908109777179[193] = 0;
   out_6137194908109777179[194] = 0;
   out_6137194908109777179[195] = 0;
   out_6137194908109777179[196] = 0;
   out_6137194908109777179[197] = 0;
   out_6137194908109777179[198] = 1;
   out_6137194908109777179[199] = 0;
   out_6137194908109777179[200] = 0;
   out_6137194908109777179[201] = 0;
   out_6137194908109777179[202] = 0;
   out_6137194908109777179[203] = 0;
   out_6137194908109777179[204] = 0;
   out_6137194908109777179[205] = 0;
   out_6137194908109777179[206] = 0;
   out_6137194908109777179[207] = 0;
   out_6137194908109777179[208] = 0;
   out_6137194908109777179[209] = 0;
   out_6137194908109777179[210] = 0;
   out_6137194908109777179[211] = 0;
   out_6137194908109777179[212] = 0;
   out_6137194908109777179[213] = 0;
   out_6137194908109777179[214] = 0;
   out_6137194908109777179[215] = 0;
   out_6137194908109777179[216] = 0;
   out_6137194908109777179[217] = 0;
   out_6137194908109777179[218] = 0;
   out_6137194908109777179[219] = 0;
   out_6137194908109777179[220] = 1;
   out_6137194908109777179[221] = 0;
   out_6137194908109777179[222] = 0;
   out_6137194908109777179[223] = 0;
   out_6137194908109777179[224] = 0;
   out_6137194908109777179[225] = 0;
   out_6137194908109777179[226] = 0;
   out_6137194908109777179[227] = 0;
   out_6137194908109777179[228] = 0;
   out_6137194908109777179[229] = 0;
   out_6137194908109777179[230] = 0;
   out_6137194908109777179[231] = 0;
   out_6137194908109777179[232] = 0;
   out_6137194908109777179[233] = 0;
   out_6137194908109777179[234] = 0;
   out_6137194908109777179[235] = 0;
   out_6137194908109777179[236] = 0;
   out_6137194908109777179[237] = 0;
   out_6137194908109777179[238] = 0;
   out_6137194908109777179[239] = 0;
   out_6137194908109777179[240] = 0;
   out_6137194908109777179[241] = 0;
   out_6137194908109777179[242] = 1;
   out_6137194908109777179[243] = 0;
   out_6137194908109777179[244] = 0;
   out_6137194908109777179[245] = 0;
   out_6137194908109777179[246] = 0;
   out_6137194908109777179[247] = 0;
   out_6137194908109777179[248] = 0;
   out_6137194908109777179[249] = 0;
   out_6137194908109777179[250] = 0;
   out_6137194908109777179[251] = 0;
   out_6137194908109777179[252] = 0;
   out_6137194908109777179[253] = 0;
   out_6137194908109777179[254] = 0;
   out_6137194908109777179[255] = 0;
   out_6137194908109777179[256] = 0;
   out_6137194908109777179[257] = 0;
   out_6137194908109777179[258] = 0;
   out_6137194908109777179[259] = 0;
   out_6137194908109777179[260] = 0;
   out_6137194908109777179[261] = 0;
   out_6137194908109777179[262] = 0;
   out_6137194908109777179[263] = 0;
   out_6137194908109777179[264] = 1;
   out_6137194908109777179[265] = 0;
   out_6137194908109777179[266] = 0;
   out_6137194908109777179[267] = 0;
   out_6137194908109777179[268] = 0;
   out_6137194908109777179[269] = 0;
   out_6137194908109777179[270] = 0;
   out_6137194908109777179[271] = 0;
   out_6137194908109777179[272] = 0;
   out_6137194908109777179[273] = 0;
   out_6137194908109777179[274] = 0;
   out_6137194908109777179[275] = 0;
   out_6137194908109777179[276] = 0;
   out_6137194908109777179[277] = 0;
   out_6137194908109777179[278] = 0;
   out_6137194908109777179[279] = 0;
   out_6137194908109777179[280] = 0;
   out_6137194908109777179[281] = 0;
   out_6137194908109777179[282] = 0;
   out_6137194908109777179[283] = 0;
   out_6137194908109777179[284] = 0;
   out_6137194908109777179[285] = 0;
   out_6137194908109777179[286] = 1;
   out_6137194908109777179[287] = 0;
   out_6137194908109777179[288] = 0;
   out_6137194908109777179[289] = 0;
   out_6137194908109777179[290] = 0;
   out_6137194908109777179[291] = 0;
   out_6137194908109777179[292] = 0;
   out_6137194908109777179[293] = 0;
   out_6137194908109777179[294] = 0;
   out_6137194908109777179[295] = 0;
   out_6137194908109777179[296] = 0;
   out_6137194908109777179[297] = 0;
   out_6137194908109777179[298] = 0;
   out_6137194908109777179[299] = 0;
   out_6137194908109777179[300] = 0;
   out_6137194908109777179[301] = 0;
   out_6137194908109777179[302] = 0;
   out_6137194908109777179[303] = 0;
   out_6137194908109777179[304] = 0;
   out_6137194908109777179[305] = 0;
   out_6137194908109777179[306] = 0;
   out_6137194908109777179[307] = 0;
   out_6137194908109777179[308] = 1;
   out_6137194908109777179[309] = 0;
   out_6137194908109777179[310] = 0;
   out_6137194908109777179[311] = 0;
   out_6137194908109777179[312] = 0;
   out_6137194908109777179[313] = 0;
   out_6137194908109777179[314] = 0;
   out_6137194908109777179[315] = 0;
   out_6137194908109777179[316] = 0;
   out_6137194908109777179[317] = 0;
   out_6137194908109777179[318] = 0;
   out_6137194908109777179[319] = 0;
   out_6137194908109777179[320] = 0;
   out_6137194908109777179[321] = 0;
   out_6137194908109777179[322] = 0;
   out_6137194908109777179[323] = 0;
   out_6137194908109777179[324] = 0;
   out_6137194908109777179[325] = 0;
   out_6137194908109777179[326] = 0;
   out_6137194908109777179[327] = 0;
   out_6137194908109777179[328] = 0;
   out_6137194908109777179[329] = 0;
   out_6137194908109777179[330] = 1;
   out_6137194908109777179[331] = 0;
   out_6137194908109777179[332] = 0;
   out_6137194908109777179[333] = 0;
   out_6137194908109777179[334] = 0;
   out_6137194908109777179[335] = 0;
   out_6137194908109777179[336] = 0;
   out_6137194908109777179[337] = 0;
   out_6137194908109777179[338] = 0;
   out_6137194908109777179[339] = 0;
   out_6137194908109777179[340] = 0;
   out_6137194908109777179[341] = 0;
   out_6137194908109777179[342] = 0;
   out_6137194908109777179[343] = 0;
   out_6137194908109777179[344] = 0;
   out_6137194908109777179[345] = 0;
   out_6137194908109777179[346] = 0;
   out_6137194908109777179[347] = 0;
   out_6137194908109777179[348] = 0;
   out_6137194908109777179[349] = 0;
   out_6137194908109777179[350] = 0;
   out_6137194908109777179[351] = 0;
   out_6137194908109777179[352] = 1;
   out_6137194908109777179[353] = 0;
   out_6137194908109777179[354] = 0;
   out_6137194908109777179[355] = 0;
   out_6137194908109777179[356] = 0;
   out_6137194908109777179[357] = 0;
   out_6137194908109777179[358] = 0;
   out_6137194908109777179[359] = 0;
   out_6137194908109777179[360] = 0;
   out_6137194908109777179[361] = 0;
   out_6137194908109777179[362] = 0;
   out_6137194908109777179[363] = 0;
   out_6137194908109777179[364] = 0;
   out_6137194908109777179[365] = 0;
   out_6137194908109777179[366] = 0;
   out_6137194908109777179[367] = 0;
   out_6137194908109777179[368] = 0;
   out_6137194908109777179[369] = 0;
   out_6137194908109777179[370] = 0;
   out_6137194908109777179[371] = 0;
   out_6137194908109777179[372] = 0;
   out_6137194908109777179[373] = 0;
   out_6137194908109777179[374] = 1;
   out_6137194908109777179[375] = 0;
   out_6137194908109777179[376] = 0;
   out_6137194908109777179[377] = 0;
   out_6137194908109777179[378] = 0;
   out_6137194908109777179[379] = 0;
   out_6137194908109777179[380] = 0;
   out_6137194908109777179[381] = 0;
   out_6137194908109777179[382] = 0;
   out_6137194908109777179[383] = 0;
   out_6137194908109777179[384] = 0;
   out_6137194908109777179[385] = 0;
   out_6137194908109777179[386] = 0;
   out_6137194908109777179[387] = 0;
   out_6137194908109777179[388] = 0;
   out_6137194908109777179[389] = 0;
   out_6137194908109777179[390] = 0;
   out_6137194908109777179[391] = 0;
   out_6137194908109777179[392] = 0;
   out_6137194908109777179[393] = 0;
   out_6137194908109777179[394] = 0;
   out_6137194908109777179[395] = 0;
   out_6137194908109777179[396] = 1;
   out_6137194908109777179[397] = 0;
   out_6137194908109777179[398] = 0;
   out_6137194908109777179[399] = 0;
   out_6137194908109777179[400] = 0;
   out_6137194908109777179[401] = 0;
   out_6137194908109777179[402] = 0;
   out_6137194908109777179[403] = 0;
   out_6137194908109777179[404] = 0;
   out_6137194908109777179[405] = 0;
   out_6137194908109777179[406] = 0;
   out_6137194908109777179[407] = 0;
   out_6137194908109777179[408] = 0;
   out_6137194908109777179[409] = 0;
   out_6137194908109777179[410] = 0;
   out_6137194908109777179[411] = 0;
   out_6137194908109777179[412] = 0;
   out_6137194908109777179[413] = 0;
   out_6137194908109777179[414] = 0;
   out_6137194908109777179[415] = 0;
   out_6137194908109777179[416] = 0;
   out_6137194908109777179[417] = 0;
   out_6137194908109777179[418] = 1;
   out_6137194908109777179[419] = 0;
   out_6137194908109777179[420] = 0;
   out_6137194908109777179[421] = 0;
   out_6137194908109777179[422] = 0;
   out_6137194908109777179[423] = 0;
   out_6137194908109777179[424] = 0;
   out_6137194908109777179[425] = 0;
   out_6137194908109777179[426] = 0;
   out_6137194908109777179[427] = 0;
   out_6137194908109777179[428] = 0;
   out_6137194908109777179[429] = 0;
   out_6137194908109777179[430] = 0;
   out_6137194908109777179[431] = 0;
   out_6137194908109777179[432] = 0;
   out_6137194908109777179[433] = 0;
   out_6137194908109777179[434] = 0;
   out_6137194908109777179[435] = 0;
   out_6137194908109777179[436] = 0;
   out_6137194908109777179[437] = 0;
   out_6137194908109777179[438] = 0;
   out_6137194908109777179[439] = 0;
   out_6137194908109777179[440] = 1;
}
void h_4(double *state, double *unused, double *out_4631659118297702821) {
   out_4631659118297702821[0] = state[10] + state[13];
   out_4631659118297702821[1] = state[11] + state[14];
   out_4631659118297702821[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2040864674671359739) {
   out_2040864674671359739[0] = 0;
   out_2040864674671359739[1] = 0;
   out_2040864674671359739[2] = 0;
   out_2040864674671359739[3] = 0;
   out_2040864674671359739[4] = 0;
   out_2040864674671359739[5] = 0;
   out_2040864674671359739[6] = 0;
   out_2040864674671359739[7] = 0;
   out_2040864674671359739[8] = 0;
   out_2040864674671359739[9] = 0;
   out_2040864674671359739[10] = 1;
   out_2040864674671359739[11] = 0;
   out_2040864674671359739[12] = 0;
   out_2040864674671359739[13] = 1;
   out_2040864674671359739[14] = 0;
   out_2040864674671359739[15] = 0;
   out_2040864674671359739[16] = 0;
   out_2040864674671359739[17] = 0;
   out_2040864674671359739[18] = 0;
   out_2040864674671359739[19] = 0;
   out_2040864674671359739[20] = 0;
   out_2040864674671359739[21] = 0;
   out_2040864674671359739[22] = 0;
   out_2040864674671359739[23] = 0;
   out_2040864674671359739[24] = 0;
   out_2040864674671359739[25] = 0;
   out_2040864674671359739[26] = 0;
   out_2040864674671359739[27] = 0;
   out_2040864674671359739[28] = 0;
   out_2040864674671359739[29] = 0;
   out_2040864674671359739[30] = 0;
   out_2040864674671359739[31] = 0;
   out_2040864674671359739[32] = 0;
   out_2040864674671359739[33] = 1;
   out_2040864674671359739[34] = 0;
   out_2040864674671359739[35] = 0;
   out_2040864674671359739[36] = 1;
   out_2040864674671359739[37] = 0;
   out_2040864674671359739[38] = 0;
   out_2040864674671359739[39] = 0;
   out_2040864674671359739[40] = 0;
   out_2040864674671359739[41] = 0;
   out_2040864674671359739[42] = 0;
   out_2040864674671359739[43] = 0;
   out_2040864674671359739[44] = 0;
   out_2040864674671359739[45] = 0;
   out_2040864674671359739[46] = 0;
   out_2040864674671359739[47] = 0;
   out_2040864674671359739[48] = 0;
   out_2040864674671359739[49] = 0;
   out_2040864674671359739[50] = 0;
   out_2040864674671359739[51] = 0;
   out_2040864674671359739[52] = 0;
   out_2040864674671359739[53] = 0;
   out_2040864674671359739[54] = 0;
   out_2040864674671359739[55] = 0;
   out_2040864674671359739[56] = 1;
   out_2040864674671359739[57] = 0;
   out_2040864674671359739[58] = 0;
   out_2040864674671359739[59] = 1;
   out_2040864674671359739[60] = 0;
   out_2040864674671359739[61] = 0;
   out_2040864674671359739[62] = 0;
   out_2040864674671359739[63] = 0;
   out_2040864674671359739[64] = 0;
   out_2040864674671359739[65] = 0;
}
void h_9(double *state, double *unused, double *out_4601435483314280008) {
   out_4601435483314280008[0] = state[10];
   out_4601435483314280008[1] = state[11];
   out_4601435483314280008[2] = state[12];
}
void H_9(double *state, double *unused, double *out_9118660463773744407) {
   out_9118660463773744407[0] = 0;
   out_9118660463773744407[1] = 0;
   out_9118660463773744407[2] = 0;
   out_9118660463773744407[3] = 0;
   out_9118660463773744407[4] = 0;
   out_9118660463773744407[5] = 0;
   out_9118660463773744407[6] = 0;
   out_9118660463773744407[7] = 0;
   out_9118660463773744407[8] = 0;
   out_9118660463773744407[9] = 0;
   out_9118660463773744407[10] = 1;
   out_9118660463773744407[11] = 0;
   out_9118660463773744407[12] = 0;
   out_9118660463773744407[13] = 0;
   out_9118660463773744407[14] = 0;
   out_9118660463773744407[15] = 0;
   out_9118660463773744407[16] = 0;
   out_9118660463773744407[17] = 0;
   out_9118660463773744407[18] = 0;
   out_9118660463773744407[19] = 0;
   out_9118660463773744407[20] = 0;
   out_9118660463773744407[21] = 0;
   out_9118660463773744407[22] = 0;
   out_9118660463773744407[23] = 0;
   out_9118660463773744407[24] = 0;
   out_9118660463773744407[25] = 0;
   out_9118660463773744407[26] = 0;
   out_9118660463773744407[27] = 0;
   out_9118660463773744407[28] = 0;
   out_9118660463773744407[29] = 0;
   out_9118660463773744407[30] = 0;
   out_9118660463773744407[31] = 0;
   out_9118660463773744407[32] = 0;
   out_9118660463773744407[33] = 1;
   out_9118660463773744407[34] = 0;
   out_9118660463773744407[35] = 0;
   out_9118660463773744407[36] = 0;
   out_9118660463773744407[37] = 0;
   out_9118660463773744407[38] = 0;
   out_9118660463773744407[39] = 0;
   out_9118660463773744407[40] = 0;
   out_9118660463773744407[41] = 0;
   out_9118660463773744407[42] = 0;
   out_9118660463773744407[43] = 0;
   out_9118660463773744407[44] = 0;
   out_9118660463773744407[45] = 0;
   out_9118660463773744407[46] = 0;
   out_9118660463773744407[47] = 0;
   out_9118660463773744407[48] = 0;
   out_9118660463773744407[49] = 0;
   out_9118660463773744407[50] = 0;
   out_9118660463773744407[51] = 0;
   out_9118660463773744407[52] = 0;
   out_9118660463773744407[53] = 0;
   out_9118660463773744407[54] = 0;
   out_9118660463773744407[55] = 0;
   out_9118660463773744407[56] = 1;
   out_9118660463773744407[57] = 0;
   out_9118660463773744407[58] = 0;
   out_9118660463773744407[59] = 0;
   out_9118660463773744407[60] = 0;
   out_9118660463773744407[61] = 0;
   out_9118660463773744407[62] = 0;
   out_9118660463773744407[63] = 0;
   out_9118660463773744407[64] = 0;
   out_9118660463773744407[65] = 0;
}
void h_10(double *state, double *unused, double *out_916556768011054270) {
   out_916556768011054270[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_916556768011054270[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_916556768011054270[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7557164162780314037) {
   out_7557164162780314037[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7557164162780314037[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7557164162780314037[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7557164162780314037[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7557164162780314037[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7557164162780314037[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7557164162780314037[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7557164162780314037[7] = 0;
   out_7557164162780314037[8] = 0;
   out_7557164162780314037[9] = 0;
   out_7557164162780314037[10] = 0;
   out_7557164162780314037[11] = 0;
   out_7557164162780314037[12] = 0;
   out_7557164162780314037[13] = 0;
   out_7557164162780314037[14] = 0;
   out_7557164162780314037[15] = 0;
   out_7557164162780314037[16] = 1;
   out_7557164162780314037[17] = 0;
   out_7557164162780314037[18] = 0;
   out_7557164162780314037[19] = 1;
   out_7557164162780314037[20] = 0;
   out_7557164162780314037[21] = 0;
   out_7557164162780314037[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7557164162780314037[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7557164162780314037[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7557164162780314037[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7557164162780314037[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7557164162780314037[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7557164162780314037[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7557164162780314037[29] = 0;
   out_7557164162780314037[30] = 0;
   out_7557164162780314037[31] = 0;
   out_7557164162780314037[32] = 0;
   out_7557164162780314037[33] = 0;
   out_7557164162780314037[34] = 0;
   out_7557164162780314037[35] = 0;
   out_7557164162780314037[36] = 0;
   out_7557164162780314037[37] = 0;
   out_7557164162780314037[38] = 0;
   out_7557164162780314037[39] = 1;
   out_7557164162780314037[40] = 0;
   out_7557164162780314037[41] = 0;
   out_7557164162780314037[42] = 1;
   out_7557164162780314037[43] = 0;
   out_7557164162780314037[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7557164162780314037[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7557164162780314037[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7557164162780314037[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7557164162780314037[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7557164162780314037[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7557164162780314037[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7557164162780314037[51] = 0;
   out_7557164162780314037[52] = 0;
   out_7557164162780314037[53] = 0;
   out_7557164162780314037[54] = 0;
   out_7557164162780314037[55] = 0;
   out_7557164162780314037[56] = 0;
   out_7557164162780314037[57] = 0;
   out_7557164162780314037[58] = 0;
   out_7557164162780314037[59] = 0;
   out_7557164162780314037[60] = 0;
   out_7557164162780314037[61] = 0;
   out_7557164162780314037[62] = 1;
   out_7557164162780314037[63] = 0;
   out_7557164162780314037[64] = 0;
   out_7557164162780314037[65] = 1;
}
void h_12(double *state, double *unused, double *out_4510911896990896196) {
   out_4510911896990896196[0] = state[0];
   out_4510911896990896196[1] = state[1];
   out_4510911896990896196[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7060321082703321534) {
   out_7060321082703321534[0] = 1;
   out_7060321082703321534[1] = 0;
   out_7060321082703321534[2] = 0;
   out_7060321082703321534[3] = 0;
   out_7060321082703321534[4] = 0;
   out_7060321082703321534[5] = 0;
   out_7060321082703321534[6] = 0;
   out_7060321082703321534[7] = 0;
   out_7060321082703321534[8] = 0;
   out_7060321082703321534[9] = 0;
   out_7060321082703321534[10] = 0;
   out_7060321082703321534[11] = 0;
   out_7060321082703321534[12] = 0;
   out_7060321082703321534[13] = 0;
   out_7060321082703321534[14] = 0;
   out_7060321082703321534[15] = 0;
   out_7060321082703321534[16] = 0;
   out_7060321082703321534[17] = 0;
   out_7060321082703321534[18] = 0;
   out_7060321082703321534[19] = 0;
   out_7060321082703321534[20] = 0;
   out_7060321082703321534[21] = 0;
   out_7060321082703321534[22] = 0;
   out_7060321082703321534[23] = 1;
   out_7060321082703321534[24] = 0;
   out_7060321082703321534[25] = 0;
   out_7060321082703321534[26] = 0;
   out_7060321082703321534[27] = 0;
   out_7060321082703321534[28] = 0;
   out_7060321082703321534[29] = 0;
   out_7060321082703321534[30] = 0;
   out_7060321082703321534[31] = 0;
   out_7060321082703321534[32] = 0;
   out_7060321082703321534[33] = 0;
   out_7060321082703321534[34] = 0;
   out_7060321082703321534[35] = 0;
   out_7060321082703321534[36] = 0;
   out_7060321082703321534[37] = 0;
   out_7060321082703321534[38] = 0;
   out_7060321082703321534[39] = 0;
   out_7060321082703321534[40] = 0;
   out_7060321082703321534[41] = 0;
   out_7060321082703321534[42] = 0;
   out_7060321082703321534[43] = 0;
   out_7060321082703321534[44] = 0;
   out_7060321082703321534[45] = 0;
   out_7060321082703321534[46] = 1;
   out_7060321082703321534[47] = 0;
   out_7060321082703321534[48] = 0;
   out_7060321082703321534[49] = 0;
   out_7060321082703321534[50] = 0;
   out_7060321082703321534[51] = 0;
   out_7060321082703321534[52] = 0;
   out_7060321082703321534[53] = 0;
   out_7060321082703321534[54] = 0;
   out_7060321082703321534[55] = 0;
   out_7060321082703321534[56] = 0;
   out_7060321082703321534[57] = 0;
   out_7060321082703321534[58] = 0;
   out_7060321082703321534[59] = 0;
   out_7060321082703321534[60] = 0;
   out_7060321082703321534[61] = 0;
   out_7060321082703321534[62] = 0;
   out_7060321082703321534[63] = 0;
   out_7060321082703321534[64] = 0;
   out_7060321082703321534[65] = 0;
}
void h_35(double *state, double *unused, double *out_6073292320071698116) {
   out_6073292320071698116[0] = state[7];
   out_6073292320071698116[1] = state[8];
   out_6073292320071698116[2] = state[9];
}
void H_35(double *state, double *unused, double *out_5407526732043967115) {
   out_5407526732043967115[0] = 0;
   out_5407526732043967115[1] = 0;
   out_5407526732043967115[2] = 0;
   out_5407526732043967115[3] = 0;
   out_5407526732043967115[4] = 0;
   out_5407526732043967115[5] = 0;
   out_5407526732043967115[6] = 0;
   out_5407526732043967115[7] = 1;
   out_5407526732043967115[8] = 0;
   out_5407526732043967115[9] = 0;
   out_5407526732043967115[10] = 0;
   out_5407526732043967115[11] = 0;
   out_5407526732043967115[12] = 0;
   out_5407526732043967115[13] = 0;
   out_5407526732043967115[14] = 0;
   out_5407526732043967115[15] = 0;
   out_5407526732043967115[16] = 0;
   out_5407526732043967115[17] = 0;
   out_5407526732043967115[18] = 0;
   out_5407526732043967115[19] = 0;
   out_5407526732043967115[20] = 0;
   out_5407526732043967115[21] = 0;
   out_5407526732043967115[22] = 0;
   out_5407526732043967115[23] = 0;
   out_5407526732043967115[24] = 0;
   out_5407526732043967115[25] = 0;
   out_5407526732043967115[26] = 0;
   out_5407526732043967115[27] = 0;
   out_5407526732043967115[28] = 0;
   out_5407526732043967115[29] = 0;
   out_5407526732043967115[30] = 1;
   out_5407526732043967115[31] = 0;
   out_5407526732043967115[32] = 0;
   out_5407526732043967115[33] = 0;
   out_5407526732043967115[34] = 0;
   out_5407526732043967115[35] = 0;
   out_5407526732043967115[36] = 0;
   out_5407526732043967115[37] = 0;
   out_5407526732043967115[38] = 0;
   out_5407526732043967115[39] = 0;
   out_5407526732043967115[40] = 0;
   out_5407526732043967115[41] = 0;
   out_5407526732043967115[42] = 0;
   out_5407526732043967115[43] = 0;
   out_5407526732043967115[44] = 0;
   out_5407526732043967115[45] = 0;
   out_5407526732043967115[46] = 0;
   out_5407526732043967115[47] = 0;
   out_5407526732043967115[48] = 0;
   out_5407526732043967115[49] = 0;
   out_5407526732043967115[50] = 0;
   out_5407526732043967115[51] = 0;
   out_5407526732043967115[52] = 0;
   out_5407526732043967115[53] = 1;
   out_5407526732043967115[54] = 0;
   out_5407526732043967115[55] = 0;
   out_5407526732043967115[56] = 0;
   out_5407526732043967115[57] = 0;
   out_5407526732043967115[58] = 0;
   out_5407526732043967115[59] = 0;
   out_5407526732043967115[60] = 0;
   out_5407526732043967115[61] = 0;
   out_5407526732043967115[62] = 0;
   out_5407526732043967115[63] = 0;
   out_5407526732043967115[64] = 0;
   out_5407526732043967115[65] = 0;
}
void h_32(double *state, double *unused, double *out_8888027542773416496) {
   out_8888027542773416496[0] = state[3];
   out_8888027542773416496[1] = state[4];
   out_8888027542773416496[2] = state[5];
   out_8888027542773416496[3] = state[6];
}
void H_32(double *state, double *unused, double *out_191883680823115118) {
   out_191883680823115118[0] = 0;
   out_191883680823115118[1] = 0;
   out_191883680823115118[2] = 0;
   out_191883680823115118[3] = 1;
   out_191883680823115118[4] = 0;
   out_191883680823115118[5] = 0;
   out_191883680823115118[6] = 0;
   out_191883680823115118[7] = 0;
   out_191883680823115118[8] = 0;
   out_191883680823115118[9] = 0;
   out_191883680823115118[10] = 0;
   out_191883680823115118[11] = 0;
   out_191883680823115118[12] = 0;
   out_191883680823115118[13] = 0;
   out_191883680823115118[14] = 0;
   out_191883680823115118[15] = 0;
   out_191883680823115118[16] = 0;
   out_191883680823115118[17] = 0;
   out_191883680823115118[18] = 0;
   out_191883680823115118[19] = 0;
   out_191883680823115118[20] = 0;
   out_191883680823115118[21] = 0;
   out_191883680823115118[22] = 0;
   out_191883680823115118[23] = 0;
   out_191883680823115118[24] = 0;
   out_191883680823115118[25] = 0;
   out_191883680823115118[26] = 1;
   out_191883680823115118[27] = 0;
   out_191883680823115118[28] = 0;
   out_191883680823115118[29] = 0;
   out_191883680823115118[30] = 0;
   out_191883680823115118[31] = 0;
   out_191883680823115118[32] = 0;
   out_191883680823115118[33] = 0;
   out_191883680823115118[34] = 0;
   out_191883680823115118[35] = 0;
   out_191883680823115118[36] = 0;
   out_191883680823115118[37] = 0;
   out_191883680823115118[38] = 0;
   out_191883680823115118[39] = 0;
   out_191883680823115118[40] = 0;
   out_191883680823115118[41] = 0;
   out_191883680823115118[42] = 0;
   out_191883680823115118[43] = 0;
   out_191883680823115118[44] = 0;
   out_191883680823115118[45] = 0;
   out_191883680823115118[46] = 0;
   out_191883680823115118[47] = 0;
   out_191883680823115118[48] = 0;
   out_191883680823115118[49] = 1;
   out_191883680823115118[50] = 0;
   out_191883680823115118[51] = 0;
   out_191883680823115118[52] = 0;
   out_191883680823115118[53] = 0;
   out_191883680823115118[54] = 0;
   out_191883680823115118[55] = 0;
   out_191883680823115118[56] = 0;
   out_191883680823115118[57] = 0;
   out_191883680823115118[58] = 0;
   out_191883680823115118[59] = 0;
   out_191883680823115118[60] = 0;
   out_191883680823115118[61] = 0;
   out_191883680823115118[62] = 0;
   out_191883680823115118[63] = 0;
   out_191883680823115118[64] = 0;
   out_191883680823115118[65] = 0;
   out_191883680823115118[66] = 0;
   out_191883680823115118[67] = 0;
   out_191883680823115118[68] = 0;
   out_191883680823115118[69] = 0;
   out_191883680823115118[70] = 0;
   out_191883680823115118[71] = 0;
   out_191883680823115118[72] = 1;
   out_191883680823115118[73] = 0;
   out_191883680823115118[74] = 0;
   out_191883680823115118[75] = 0;
   out_191883680823115118[76] = 0;
   out_191883680823115118[77] = 0;
   out_191883680823115118[78] = 0;
   out_191883680823115118[79] = 0;
   out_191883680823115118[80] = 0;
   out_191883680823115118[81] = 0;
   out_191883680823115118[82] = 0;
   out_191883680823115118[83] = 0;
   out_191883680823115118[84] = 0;
   out_191883680823115118[85] = 0;
   out_191883680823115118[86] = 0;
   out_191883680823115118[87] = 0;
}
void h_13(double *state, double *unused, double *out_6130404106778203215) {
   out_6130404106778203215[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6130404106778203215[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6130404106778203215[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5152835145042968857) {
   out_5152835145042968857[0] = 0;
   out_5152835145042968857[1] = 0;
   out_5152835145042968857[2] = 0;
   out_5152835145042968857[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5152835145042968857[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5152835145042968857[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5152835145042968857[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5152835145042968857[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5152835145042968857[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5152835145042968857[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5152835145042968857[10] = 0;
   out_5152835145042968857[11] = 0;
   out_5152835145042968857[12] = 0;
   out_5152835145042968857[13] = 0;
   out_5152835145042968857[14] = 0;
   out_5152835145042968857[15] = 0;
   out_5152835145042968857[16] = 0;
   out_5152835145042968857[17] = 0;
   out_5152835145042968857[18] = 0;
   out_5152835145042968857[19] = 0;
   out_5152835145042968857[20] = 0;
   out_5152835145042968857[21] = 0;
   out_5152835145042968857[22] = 0;
   out_5152835145042968857[23] = 0;
   out_5152835145042968857[24] = 0;
   out_5152835145042968857[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5152835145042968857[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5152835145042968857[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5152835145042968857[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5152835145042968857[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5152835145042968857[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5152835145042968857[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5152835145042968857[32] = 0;
   out_5152835145042968857[33] = 0;
   out_5152835145042968857[34] = 0;
   out_5152835145042968857[35] = 0;
   out_5152835145042968857[36] = 0;
   out_5152835145042968857[37] = 0;
   out_5152835145042968857[38] = 0;
   out_5152835145042968857[39] = 0;
   out_5152835145042968857[40] = 0;
   out_5152835145042968857[41] = 0;
   out_5152835145042968857[42] = 0;
   out_5152835145042968857[43] = 0;
   out_5152835145042968857[44] = 0;
   out_5152835145042968857[45] = 0;
   out_5152835145042968857[46] = 0;
   out_5152835145042968857[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5152835145042968857[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5152835145042968857[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5152835145042968857[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5152835145042968857[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5152835145042968857[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5152835145042968857[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5152835145042968857[54] = 0;
   out_5152835145042968857[55] = 0;
   out_5152835145042968857[56] = 0;
   out_5152835145042968857[57] = 0;
   out_5152835145042968857[58] = 0;
   out_5152835145042968857[59] = 0;
   out_5152835145042968857[60] = 0;
   out_5152835145042968857[61] = 0;
   out_5152835145042968857[62] = 0;
   out_5152835145042968857[63] = 0;
   out_5152835145042968857[64] = 0;
   out_5152835145042968857[65] = 0;
}
void h_14(double *state, double *unused, double *out_4601435483314280008) {
   out_4601435483314280008[0] = state[10];
   out_4601435483314280008[1] = state[11];
   out_4601435483314280008[2] = state[12];
}
void H_14(double *state, double *unused, double *out_9118660463773744407) {
   out_9118660463773744407[0] = 0;
   out_9118660463773744407[1] = 0;
   out_9118660463773744407[2] = 0;
   out_9118660463773744407[3] = 0;
   out_9118660463773744407[4] = 0;
   out_9118660463773744407[5] = 0;
   out_9118660463773744407[6] = 0;
   out_9118660463773744407[7] = 0;
   out_9118660463773744407[8] = 0;
   out_9118660463773744407[9] = 0;
   out_9118660463773744407[10] = 1;
   out_9118660463773744407[11] = 0;
   out_9118660463773744407[12] = 0;
   out_9118660463773744407[13] = 0;
   out_9118660463773744407[14] = 0;
   out_9118660463773744407[15] = 0;
   out_9118660463773744407[16] = 0;
   out_9118660463773744407[17] = 0;
   out_9118660463773744407[18] = 0;
   out_9118660463773744407[19] = 0;
   out_9118660463773744407[20] = 0;
   out_9118660463773744407[21] = 0;
   out_9118660463773744407[22] = 0;
   out_9118660463773744407[23] = 0;
   out_9118660463773744407[24] = 0;
   out_9118660463773744407[25] = 0;
   out_9118660463773744407[26] = 0;
   out_9118660463773744407[27] = 0;
   out_9118660463773744407[28] = 0;
   out_9118660463773744407[29] = 0;
   out_9118660463773744407[30] = 0;
   out_9118660463773744407[31] = 0;
   out_9118660463773744407[32] = 0;
   out_9118660463773744407[33] = 1;
   out_9118660463773744407[34] = 0;
   out_9118660463773744407[35] = 0;
   out_9118660463773744407[36] = 0;
   out_9118660463773744407[37] = 0;
   out_9118660463773744407[38] = 0;
   out_9118660463773744407[39] = 0;
   out_9118660463773744407[40] = 0;
   out_9118660463773744407[41] = 0;
   out_9118660463773744407[42] = 0;
   out_9118660463773744407[43] = 0;
   out_9118660463773744407[44] = 0;
   out_9118660463773744407[45] = 0;
   out_9118660463773744407[46] = 0;
   out_9118660463773744407[47] = 0;
   out_9118660463773744407[48] = 0;
   out_9118660463773744407[49] = 0;
   out_9118660463773744407[50] = 0;
   out_9118660463773744407[51] = 0;
   out_9118660463773744407[52] = 0;
   out_9118660463773744407[53] = 0;
   out_9118660463773744407[54] = 0;
   out_9118660463773744407[55] = 0;
   out_9118660463773744407[56] = 1;
   out_9118660463773744407[57] = 0;
   out_9118660463773744407[58] = 0;
   out_9118660463773744407[59] = 0;
   out_9118660463773744407[60] = 0;
   out_9118660463773744407[61] = 0;
   out_9118660463773744407[62] = 0;
   out_9118660463773744407[63] = 0;
   out_9118660463773744407[64] = 0;
   out_9118660463773744407[65] = 0;
}
void h_33(double *state, double *unused, double *out_4134089893039182451) {
   out_4134089893039182451[0] = state[16];
   out_4134089893039182451[1] = state[17];
   out_4134089893039182451[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8558083736682824719) {
   out_8558083736682824719[0] = 0;
   out_8558083736682824719[1] = 0;
   out_8558083736682824719[2] = 0;
   out_8558083736682824719[3] = 0;
   out_8558083736682824719[4] = 0;
   out_8558083736682824719[5] = 0;
   out_8558083736682824719[6] = 0;
   out_8558083736682824719[7] = 0;
   out_8558083736682824719[8] = 0;
   out_8558083736682824719[9] = 0;
   out_8558083736682824719[10] = 0;
   out_8558083736682824719[11] = 0;
   out_8558083736682824719[12] = 0;
   out_8558083736682824719[13] = 0;
   out_8558083736682824719[14] = 0;
   out_8558083736682824719[15] = 0;
   out_8558083736682824719[16] = 1;
   out_8558083736682824719[17] = 0;
   out_8558083736682824719[18] = 0;
   out_8558083736682824719[19] = 0;
   out_8558083736682824719[20] = 0;
   out_8558083736682824719[21] = 0;
   out_8558083736682824719[22] = 0;
   out_8558083736682824719[23] = 0;
   out_8558083736682824719[24] = 0;
   out_8558083736682824719[25] = 0;
   out_8558083736682824719[26] = 0;
   out_8558083736682824719[27] = 0;
   out_8558083736682824719[28] = 0;
   out_8558083736682824719[29] = 0;
   out_8558083736682824719[30] = 0;
   out_8558083736682824719[31] = 0;
   out_8558083736682824719[32] = 0;
   out_8558083736682824719[33] = 0;
   out_8558083736682824719[34] = 0;
   out_8558083736682824719[35] = 0;
   out_8558083736682824719[36] = 0;
   out_8558083736682824719[37] = 0;
   out_8558083736682824719[38] = 0;
   out_8558083736682824719[39] = 1;
   out_8558083736682824719[40] = 0;
   out_8558083736682824719[41] = 0;
   out_8558083736682824719[42] = 0;
   out_8558083736682824719[43] = 0;
   out_8558083736682824719[44] = 0;
   out_8558083736682824719[45] = 0;
   out_8558083736682824719[46] = 0;
   out_8558083736682824719[47] = 0;
   out_8558083736682824719[48] = 0;
   out_8558083736682824719[49] = 0;
   out_8558083736682824719[50] = 0;
   out_8558083736682824719[51] = 0;
   out_8558083736682824719[52] = 0;
   out_8558083736682824719[53] = 0;
   out_8558083736682824719[54] = 0;
   out_8558083736682824719[55] = 0;
   out_8558083736682824719[56] = 0;
   out_8558083736682824719[57] = 0;
   out_8558083736682824719[58] = 0;
   out_8558083736682824719[59] = 0;
   out_8558083736682824719[60] = 0;
   out_8558083736682824719[61] = 0;
   out_8558083736682824719[62] = 1;
   out_8558083736682824719[63] = 0;
   out_8558083736682824719[64] = 0;
   out_8558083736682824719[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5615539772670674435) {
  H(in_vec, out_5615539772670674435);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3184297168680991965) {
  err_fun(nom_x, delta_x, out_3184297168680991965);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1346894790680346190) {
  inv_err_fun(nom_x, true_x, out_1346894790680346190);
}
void live_H_mod_fun(double *state, double *out_3305990753123808482) {
  H_mod_fun(state, out_3305990753123808482);
}
void live_f_fun(double *state, double dt, double *out_5565335988102264817) {
  f_fun(state,  dt, out_5565335988102264817);
}
void live_F_fun(double *state, double dt, double *out_6137194908109777179) {
  F_fun(state,  dt, out_6137194908109777179);
}
void live_h_4(double *state, double *unused, double *out_4631659118297702821) {
  h_4(state, unused, out_4631659118297702821);
}
void live_H_4(double *state, double *unused, double *out_2040864674671359739) {
  H_4(state, unused, out_2040864674671359739);
}
void live_h_9(double *state, double *unused, double *out_4601435483314280008) {
  h_9(state, unused, out_4601435483314280008);
}
void live_H_9(double *state, double *unused, double *out_9118660463773744407) {
  H_9(state, unused, out_9118660463773744407);
}
void live_h_10(double *state, double *unused, double *out_916556768011054270) {
  h_10(state, unused, out_916556768011054270);
}
void live_H_10(double *state, double *unused, double *out_7557164162780314037) {
  H_10(state, unused, out_7557164162780314037);
}
void live_h_12(double *state, double *unused, double *out_4510911896990896196) {
  h_12(state, unused, out_4510911896990896196);
}
void live_H_12(double *state, double *unused, double *out_7060321082703321534) {
  H_12(state, unused, out_7060321082703321534);
}
void live_h_35(double *state, double *unused, double *out_6073292320071698116) {
  h_35(state, unused, out_6073292320071698116);
}
void live_H_35(double *state, double *unused, double *out_5407526732043967115) {
  H_35(state, unused, out_5407526732043967115);
}
void live_h_32(double *state, double *unused, double *out_8888027542773416496) {
  h_32(state, unused, out_8888027542773416496);
}
void live_H_32(double *state, double *unused, double *out_191883680823115118) {
  H_32(state, unused, out_191883680823115118);
}
void live_h_13(double *state, double *unused, double *out_6130404106778203215) {
  h_13(state, unused, out_6130404106778203215);
}
void live_H_13(double *state, double *unused, double *out_5152835145042968857) {
  H_13(state, unused, out_5152835145042968857);
}
void live_h_14(double *state, double *unused, double *out_4601435483314280008) {
  h_14(state, unused, out_4601435483314280008);
}
void live_H_14(double *state, double *unused, double *out_9118660463773744407) {
  H_14(state, unused, out_9118660463773744407);
}
void live_h_33(double *state, double *unused, double *out_4134089893039182451) {
  h_33(state, unused, out_4134089893039182451);
}
void live_H_33(double *state, double *unused, double *out_8558083736682824719) {
  H_33(state, unused, out_8558083736682824719);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
